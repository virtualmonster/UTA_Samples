steps:
  - sql:
      note: tables
      transport: db.dtt.yaml
      statement: |
        DROP TABLE IF EXISTS "ACCOUNT" CASCADE;
        CREATE TABLE "ACCOUNT"(
            "ID" SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            "NAME" CHARACTER VARYING(12) NOT NULL
        );
        DROP TABLE IF EXISTS "HOLDER" CASCADE;
        CREATE TABLE "HOLDER"(
            "ID" SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            "ACCOUNT_ID" SMALLINT NOT NULL,
            "NAME" CHARACTER VARYING(12) NOT NULL
        );
        DROP TABLE IF EXISTS "TRANSFER" CASCADE;
        CREATE TABLE "TRANSFER"(
            "ID" SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            "ACCOUNT_ID" SMALLINT NOT NULL,
            "AMOUNT" SMALLINT NOT NULL,
            "NAME" CHARACTER VARYING(12) NOT NULL
        );
  - sql:
      note: foreign key constraints
      transport: db.dtt.yaml
      statement: |
        ALTER TABLE "HOLDER" ADD CONSTRAINT "HOLDER_ACCOUNT_ID_FK" FOREIGN KEY("ACCOUNT_ID") REFERENCES "ACCOUNT"("ID") ON DELETE CASCADE;
        ALTER TABLE "TRANSFER" ADD CONSTRAINT "TRANSFER_ACCOUNT_ID_FK" FOREIGN KEY("ACCOUNT_ID") REFERENCES "ACCOUNT"("ID") ON DELETE CASCADE;
  - sql:
      transport: db.dtt.yaml
      statement: |
        INSERT INTO "ACCOUNT" VALUES (CAST(? AS smallint),?)
      dataset: ../account.csv
  - sql:
      transport: db.dtt.yaml
      statement: |
        INSERT INTO "HOLDER" ("ACCOUNT_ID", "NAME") VALUES (CAST(? AS smallint),?)
      dataset: ../holder.csv
  - sql:
      transport: db.dtt.yaml
      statement: |
        INSERT INTO "TRANSFER" ("ACCOUNT_ID", "AMOUNT", "NAME") VALUES (CAST(? AS smallint), CAST(? AS smallint),?)
      dataset: ../transaction.csv
vars:
  DATABASE_HOST:
    modifier: out
    val: localhost
